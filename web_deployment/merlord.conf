server {
    listen 80;
    server_name merlord.com www.merlord.com;
    
    # 将 HTTP 重定向到 HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name merlord.com www.merlord.com;

    # SSL 证书配置
    ssl_certificate /etc/letsencrypt/live/merlord.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/merlord.com/privkey.pem;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HTTP/2 推送优化
    http2_push_preload on;

    # Certbot 验证会使用这个目录
    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/merlord_website;
    }
    
    root /var/www/merlord_website;
    index index.html;

    # 启用 Brotli 压缩（如果可用）
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css application/javascript application/json text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # 启用 gzip 压缩（作为后备）
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/woff
        font/woff2
        font/ttf
        font/eot;

    # 优化字体缓存和预加载
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header Vary "Accept-Encoding";
        access_log off;
    }

    # 优化 CSS 和 JS 文件
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # 启用压缩
        gzip_static on;
        brotli_static on;
    }

    # 优化图片文件
    location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # 启用图片压缩
        gzip_static on;
        brotli_static on;
        
        # 图片优化
        try_files $uri $uri/ =404;
    }

    # 优化 HTML 文件
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
    }

    # 主页面优化
    location / {
        try_files $uri $uri/ =404;
        
        # 启用预加载
        add_header Link "</assets/css/style.css>; rel=preload; as=style";
        add_header Link "</assets/js/main.js>; rel=preload; as=script";
    }

    # 静态资源缓存优化
    location ~* \.(pdf|doc|docx|xls|xlsx|ppt|pptx)$ {
        expires 30d;
        add_header Cache-Control "public";
    }

    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 性能优化头
    add_header Vary "Accept-Encoding" always;
    
    # 移除服务器标识
    server_tokens off;
}